// <auto-generated />
using System;
using MedShare.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MedShare.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251011172804_PopularMedicamentoEstoques")]
    partial class PopularMedicamentoEstoques
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MedShare.Models.Doacao", b =>
                {
                    b.Property<int>("DoacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoacaoId"));

                    b.Property<DateTime>("DoacaoDataValidade")
                        .HasColumnType("datetime2");

                    b.Property<string>("DoacaoNomeMedicamento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("DoacaoQuantidadeMedicamento")
                        .HasColumnType("int");

                    b.Property<int>("DoacaoUrlFoto")
                        .HasColumnType("int");

                    b.Property<int>("DoacaoUrlReceita")
                        .HasColumnType("int");

                    b.Property<int>("DoadorId")
                        .HasColumnType("int");

                    b.Property<int>("InstituicaoId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("DoacaoId");

                    b.HasIndex("DoadorId");

                    b.HasIndex("InstituicaoId");

                    b.ToTable("Doacaos");
                });

            modelBuilder.Entity("MedShare.Models.Doador", b =>
                {
                    b.Property<int>("DoadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoadorId"));

                    b.Property<string>("DoadorCpf")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DoadorDataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("DoadorEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DoadorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DoadorSenha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DoadorId");

                    b.ToTable("Doadors");
                });

            modelBuilder.Entity("MedShare.Models.HistoricoDoacao", b =>
                {
                    b.Property<int>("HistoricoDoacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoricoDoacaoId"));

                    b.Property<int>("DoacaoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("HistoricoDoacaoDataFinalizacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("HistoricoDoacaoResultado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HistoricoDoacaoId");

                    b.HasIndex("DoacaoId");

                    b.ToTable("HistoricoDoacaos");
                });

            modelBuilder.Entity("MedShare.Models.Instituicao", b =>
                {
                    b.Property<int>("InstituicaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstituicaoId"));

                    b.Property<string>("InstituicaoCnpj")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InstituicaoEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InstituicaoEndereco")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InstituicaoNome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InstituicaoSenha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InstituicaoId");

                    b.ToTable("Instituicaos");
                });

            modelBuilder.Entity("MedShare.Models.MedicamentoEstoque", b =>
                {
                    b.Property<int>("MedicamentoEstoqueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicamentoEstoqueId"));

                    b.Property<int>("InstituicaoId")
                        .HasColumnType("int");

                    b.Property<string>("MedicamentoEstoqueNome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MedicamentoEstoqueQuantidade")
                        .HasColumnType("int");

                    b.HasKey("MedicamentoEstoqueId");

                    b.HasIndex("InstituicaoId");

                    b.ToTable("MedicamentoEstoques");
                });

            modelBuilder.Entity("MedShare.Models.Notificacao", b =>
                {
                    b.Property<int>("NotificacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificacaoId"));

                    b.Property<int>("DoacaoId")
                        .HasColumnType("int");

                    b.Property<int>("DoadorId")
                        .HasColumnType("int");

                    b.Property<int>("InstituicaoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NotificacaoDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("NotificacaoMensagem")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NotificacaoId");

                    b.HasIndex("DoacaoId");

                    b.HasIndex("DoadorId");

                    b.HasIndex("InstituicaoId");

                    b.ToTable("Notificacaos");
                });

            modelBuilder.Entity("MedShare.Models.Doacao", b =>
                {
                    b.HasOne("MedShare.Models.Doador", "Doador")
                        .WithMany("Doacaos")
                        .HasForeignKey("DoadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedShare.Models.Instituicao", "Instituicao")
                        .WithMany("Doacaos")
                        .HasForeignKey("InstituicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doador");

                    b.Navigation("Instituicao");
                });

            modelBuilder.Entity("MedShare.Models.HistoricoDoacao", b =>
                {
                    b.HasOne("MedShare.Models.Doacao", "Doacao")
                        .WithMany()
                        .HasForeignKey("DoacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doacao");
                });

            modelBuilder.Entity("MedShare.Models.MedicamentoEstoque", b =>
                {
                    b.HasOne("MedShare.Models.Instituicao", "Instituicao")
                        .WithMany()
                        .HasForeignKey("InstituicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instituicao");
                });

            modelBuilder.Entity("MedShare.Models.Notificacao", b =>
                {
                    b.HasOne("MedShare.Models.Doacao", "Doacao")
                        .WithMany()
                        .HasForeignKey("DoacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedShare.Models.Doador", "Doador")
                        .WithMany()
                        .HasForeignKey("DoadorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MedShare.Models.Instituicao", "Instituicao")
                        .WithMany()
                        .HasForeignKey("InstituicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doacao");

                    b.Navigation("Doador");

                    b.Navigation("Instituicao");
                });

            modelBuilder.Entity("MedShare.Models.Doador", b =>
                {
                    b.Navigation("Doacaos");
                });

            modelBuilder.Entity("MedShare.Models.Instituicao", b =>
                {
                    b.Navigation("Doacaos");
                });
#pragma warning restore 612, 618
        }
    }
}
